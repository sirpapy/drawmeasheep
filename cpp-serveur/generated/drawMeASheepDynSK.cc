// This file is generated by omniidl (C++ backend) - omniORB_4_1. Do not edit.

#include "drawMeASheep.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_1_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::PR_structMember _0RL_structmember_drawMeASheep_mgenerated_mdrawingEntity_mPoint[] = {
  {"x", CORBA::TypeCode::PR_double_tc()},
  {"y", CORBA::TypeCode::PR_double_tc()}
};

#ifdef _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint
#  undef _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint
#endif
static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint = CORBA::TypeCode::PR_struct_tc("IDL:drawMeASheep/generated/drawingEntity/Point:1.0", "Point", _0RL_structmember_drawMeASheep_mgenerated_mdrawingEntity_mPoint, 2, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Point = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Point = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint;
#endif






static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/drawingEntity/PointSet:1.0", "PointSet", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint, &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_PointSet = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_PointSet = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet;
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Drawing = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Drawing:1.0", "Drawing", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Drawing = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Drawing:1.0", "Drawing", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Polygone = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Polygone:1.0", "Polygone", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Polygone = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Polygone:1.0", "Polygone", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Line = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Line:1.0", "Line", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Line = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Line:1.0", "Line", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Cercle = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Cercle:1.0", "Cercle", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Cercle = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Cercle:1.0", "Cercle", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_Ellipse = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Ellipse:1.0", "Ellipse", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_Ellipse = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Ellipse:1.0", "Ellipse", &_0RL_tcTrack);
#endif

static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/drawingEntity/DrawingSet:1.0", "DrawingSet", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Drawing:1.0", "Drawing", &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingSet = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_DrawingSet = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet;
#endif

static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/drawingEntity/DrawingMap:1.0", "DrawingMap", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/Drawing:1.0", "Drawing", &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingMap = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_DrawingMap = _0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap;
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace drawingEntity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingGroup = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/DrawingGroup:1.0", "DrawingGroup", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::drawingEntity::_tc_DrawingGroup = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/drawingEntity/DrawingGroup:1.0", "DrawingGroup", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace manager { 
  const ::CORBA::TypeCode_ptr _tc_DrawingManager = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/manager/DrawingManager:1.0", "DrawingManager", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::manager::_tc_DrawingManager = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/manager/DrawingManager:1.0", "DrawingManager", &_0RL_tcTrack);
#endif

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::drawingEntity::Point* _p = (drawMeASheep::generated::drawingEntity::Point*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::drawingEntity::Point* _p = new drawMeASheep::generated::drawingEntity::Point;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_destructor_fn(void* _v)
{
  drawMeASheep::generated::drawingEntity::Point* _p = (drawMeASheep::generated::drawingEntity::Point*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::Point& _s)
{
  drawMeASheep::generated::drawingEntity::Point* _p = new drawMeASheep::generated::drawingEntity::Point(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Point* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Point*& _sp)
{
  return _a >>= (const drawMeASheep::generated::drawingEntity::Point*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::Point*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPoint,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPoint_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::drawingEntity::Point*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::drawingEntity::PointSet* _p = (drawMeASheep::generated::drawingEntity::PointSet*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::drawingEntity::PointSet* _p = new drawMeASheep::generated::drawingEntity::PointSet;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_destructor_fn(void* _v)
{
  drawMeASheep::generated::drawingEntity::PointSet* _p = (drawMeASheep::generated::drawingEntity::PointSet*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::PointSet& _s)
{
  drawMeASheep::generated::drawingEntity::PointSet* _p = new drawMeASheep::generated::drawingEntity::PointSet(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::PointSet* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::PointSet*& _sp)
{
  return _a >>= (const drawMeASheep::generated::drawingEntity::PointSet*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::PointSet*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mPointSet,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPointSet_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::drawingEntity::PointSet*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::Drawing::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Drawing_ptr _o)
{
  drawMeASheep::generated::drawingEntity::Drawing_ptr _no = drawMeASheep::generated::drawingEntity::Drawing::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Drawing,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Drawing_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Drawing,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::Drawing::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Drawing_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_Drawing,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawing_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::Drawing_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::Drawing::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::Drawing::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::Polygone::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Polygone_ptr _o)
{
  drawMeASheep::generated::drawingEntity::Polygone_ptr _no = drawMeASheep::generated::drawingEntity::Polygone::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Polygone,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Polygone_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Polygone,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::Polygone::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Polygone_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_Polygone,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mPolygone_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::Polygone_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::Polygone::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::Polygone::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::Line::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Line_ptr _o)
{
  drawMeASheep::generated::drawingEntity::Line_ptr _no = drawMeASheep::generated::drawingEntity::Line::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Line,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Line_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Line,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::Line::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Line_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_Line,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mLine_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::Line_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::Line::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::Line::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::Cercle::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Cercle_ptr _o)
{
  drawMeASheep::generated::drawingEntity::Cercle_ptr _no = drawMeASheep::generated::drawingEntity::Cercle::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Cercle,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Cercle_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Cercle,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::Cercle::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Cercle_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_Cercle,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mCercle_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::Cercle_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::Cercle::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::Cercle::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::Ellipse::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Ellipse_ptr _o)
{
  drawMeASheep::generated::drawingEntity::Ellipse_ptr _no = drawMeASheep::generated::drawingEntity::Ellipse::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Ellipse,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Ellipse_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_Ellipse,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::Ellipse::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::Ellipse_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_Ellipse,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mEllipse_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::Ellipse_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::Ellipse::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::Ellipse::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::drawingEntity::DrawingSet* _p = (drawMeASheep::generated::drawingEntity::DrawingSet*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::drawingEntity::DrawingSet* _p = new drawMeASheep::generated::drawingEntity::DrawingSet;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_destructor_fn(void* _v)
{
  drawMeASheep::generated::drawingEntity::DrawingSet* _p = (drawMeASheep::generated::drawingEntity::DrawingSet*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::DrawingSet& _s)
{
  drawMeASheep::generated::drawingEntity::DrawingSet* _p = new drawMeASheep::generated::drawingEntity::DrawingSet(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingSet* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingSet*& _sp)
{
  return _a >>= (const drawMeASheep::generated::drawingEntity::DrawingSet*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::DrawingSet*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingSet_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::drawingEntity::DrawingSet*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::drawingEntity::DrawingMap* _p = (drawMeASheep::generated::drawingEntity::DrawingMap*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::drawingEntity::DrawingMap* _p = new drawMeASheep::generated::drawingEntity::DrawingMap;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_destructor_fn(void* _v)
{
  drawMeASheep::generated::drawingEntity::DrawingMap* _p = (drawMeASheep::generated::drawingEntity::DrawingMap*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::DrawingMap& _s)
{
  drawMeASheep::generated::drawingEntity::DrawingMap* _p = new drawMeASheep::generated::drawingEntity::DrawingMap(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingMap* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingMap*& _sp)
{
  return _a >>= (const drawMeASheep::generated::drawingEntity::DrawingMap*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::drawingEntity::DrawingMap*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingMap_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::drawingEntity::DrawingMap*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::drawingEntity::DrawingGroup::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingGroup_ptr _o)
{
  drawMeASheep::generated::drawingEntity::DrawingGroup_ptr _no = drawMeASheep::generated::drawingEntity::DrawingGroup::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_DrawingGroup,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingGroup_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::drawingEntity::_tc_DrawingGroup,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::drawingEntity::DrawingGroup::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::drawingEntity::DrawingGroup_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::drawingEntity::_tc_DrawingGroup,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mdrawingEntity_mDrawingGroup_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::drawingEntity::DrawingGroup_ptr)_r->_ptrToObjRef(drawMeASheep::generated::drawingEntity::DrawingGroup::_PD_repoId);
    else
      _o = drawMeASheep::generated::drawingEntity::DrawingGroup::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::manager::DrawingManager::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr _o)
{
  drawMeASheep::generated::manager::DrawingManager_ptr _no = drawMeASheep::generated::manager::DrawingManager::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::manager::_tc_DrawingManager,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::manager::_tc_DrawingManager,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::manager::DrawingManager::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::manager::_tc_DrawingManager,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::manager::DrawingManager_ptr)_r->_ptrToObjRef(drawMeASheep::generated::manager::DrawingManager::_PD_repoId);
    else
      _o = drawMeASheep::generated::manager::DrawingManager::_nil();
    return 1;
  }
  return 0;
}


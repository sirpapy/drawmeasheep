// This file is generated by omniidl (C++ backend) - omniORB_4_2. Do not edit.

#include "drawMeASheep.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_2_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::PR_structMember _0RL_structmember_drawMeASheep_mgenerated_mentity_mPoint[] = {
  {"x", CORBA::TypeCode::PR_double_tc()},
  {"y", CORBA::TypeCode::PR_double_tc()}
};

#ifdef _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint
#  undef _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint
#endif
static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint = CORBA::TypeCode::PR_struct_tc("IDL:drawMeASheep/generated/entity/Point:1.0", "Point", _0RL_structmember_drawMeASheep_mgenerated_mentity_mPoint, 2, &_0RL_tcTrack);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Point = _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Point = _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint;
#endif






static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/entity/PointSet:1.0", "PointSet", CORBA::TypeCode::PR_sequence_tc(0, _0RL_tc_drawMeASheep_mgenerated_mentity_mPoint, &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_PointSet = _0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_PointSet = _0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet;
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Drawing = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Drawing:1.0", "Drawing", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Drawing = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Drawing:1.0", "Drawing", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Polygon = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Polygon:1.0", "Polygon", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Polygon = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Polygon:1.0", "Polygon", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Line = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Line:1.0", "Line", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Line = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Line:1.0", "Line", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Circle = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Circle:1.0", "Circle", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Circle = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Circle:1.0", "Circle", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_Ellipse = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Ellipse:1.0", "Ellipse", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_Ellipse = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Ellipse:1.0", "Ellipse", &_0RL_tcTrack);
#endif

static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/entity/DrawingSet:1.0", "DrawingSet", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Drawing:1.0", "Drawing", &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingSet = _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_DrawingSet = _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet;
#endif

static CORBA::TypeCode_ptr _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap = CORBA::TypeCode::PR_alias_tc("IDL:drawMeASheep/generated/entity/DrawingMap:1.0", "DrawingMap", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/Drawing:1.0", "Drawing", &_0RL_tcTrack), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingMap = _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap;
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_DrawingMap = _0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap;
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace entity { 
  const ::CORBA::TypeCode_ptr _tc_DrawingGroup = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/DrawingGroup:1.0", "DrawingGroup", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::entity::_tc_DrawingGroup = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/entity/DrawingGroup:1.0", "DrawingGroup", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace drawMeASheep { namespace generated { namespace manager { 
  const ::CORBA::TypeCode_ptr _tc_DrawingManager = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/manager/DrawingManager:1.0", "DrawingManager", &_0RL_tcTrack);
} } } 
#else
const ::CORBA::TypeCode_ptr drawMeASheep::generated::manager::_tc_DrawingManager = CORBA::TypeCode::PR_interface_tc("IDL:drawMeASheep/generated/manager/DrawingManager:1.0", "DrawingManager", &_0RL_tcTrack);
#endif

static void _0RL_drawMeASheep_mgenerated_mentity_mPoint_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::entity::Point* _p = (drawMeASheep::generated::entity::Point*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPoint_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::entity::Point* _p = new drawMeASheep::generated::entity::Point;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPoint_destructor_fn(void* _v)
{
  drawMeASheep::generated::entity::Point* _p = (drawMeASheep::generated::entity::Point*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::entity::Point& _s)
{
  drawMeASheep::generated::entity::Point* _p = new drawMeASheep::generated::entity::Point(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mPoint,
               _0RL_drawMeASheep_mgenerated_mentity_mPoint_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPoint_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Point* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mPoint,
               _0RL_drawMeASheep_mgenerated_mentity_mPoint_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPoint_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Point*& _sp)
{
  return _a >>= (const drawMeASheep::generated::entity::Point*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::entity::Point*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mentity_mPoint,
                    _0RL_drawMeASheep_mgenerated_mentity_mPoint_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPoint_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPoint_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::entity::Point*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mPointSet_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::entity::PointSet* _p = (drawMeASheep::generated::entity::PointSet*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPointSet_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::entity::PointSet* _p = new drawMeASheep::generated::entity::PointSet;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPointSet_destructor_fn(void* _v)
{
  drawMeASheep::generated::entity::PointSet* _p = (drawMeASheep::generated::entity::PointSet*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::entity::PointSet& _s)
{
  drawMeASheep::generated::entity::PointSet* _p = new drawMeASheep::generated::entity::PointSet(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet,
               _0RL_drawMeASheep_mgenerated_mentity_mPointSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPointSet_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::PointSet* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet,
               _0RL_drawMeASheep_mgenerated_mentity_mPointSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPointSet_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::PointSet*& _sp)
{
  return _a >>= (const drawMeASheep::generated::entity::PointSet*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::entity::PointSet*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mentity_mPointSet,
                    _0RL_drawMeASheep_mgenerated_mentity_mPointSet_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPointSet_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPointSet_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::entity::PointSet*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mDrawing_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawing_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::Drawing::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawing_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Drawing_ptr _o)
{
  drawMeASheep::generated::entity::Drawing_ptr _no = drawMeASheep::generated::entity::Drawing::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Drawing,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawing_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawing_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Drawing_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Drawing,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawing_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawing_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::Drawing::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Drawing_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_Drawing,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawing_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawing_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawing_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::Drawing_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::Drawing::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::Drawing::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mPolygon_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPolygon_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::Polygon::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mPolygon_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Polygon_ptr _o)
{
  drawMeASheep::generated::entity::Polygon_ptr _no = drawMeASheep::generated::entity::Polygon::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Polygon,
               _0RL_drawMeASheep_mgenerated_mentity_mPolygon_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPolygon_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Polygon_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Polygon,
               _0RL_drawMeASheep_mgenerated_mentity_mPolygon_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mPolygon_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::Polygon::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Polygon_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_Polygon,
                    _0RL_drawMeASheep_mgenerated_mentity_mPolygon_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPolygon_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mPolygon_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::Polygon_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::Polygon::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::Polygon::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mLine_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mLine_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::Line::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mLine_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Line_ptr _o)
{
  drawMeASheep::generated::entity::Line_ptr _no = drawMeASheep::generated::entity::Line::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Line,
               _0RL_drawMeASheep_mgenerated_mentity_mLine_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mLine_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Line_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Line,
               _0RL_drawMeASheep_mgenerated_mentity_mLine_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mLine_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::Line::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Line_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_Line,
                    _0RL_drawMeASheep_mgenerated_mentity_mLine_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mLine_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mLine_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::Line_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::Line::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::Line::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mCircle_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mCircle_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::Circle::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mCircle_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Circle_ptr _o)
{
  drawMeASheep::generated::entity::Circle_ptr _no = drawMeASheep::generated::entity::Circle::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Circle,
               _0RL_drawMeASheep_mgenerated_mentity_mCircle_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mCircle_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Circle_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Circle,
               _0RL_drawMeASheep_mgenerated_mentity_mCircle_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mCircle_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::Circle::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Circle_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_Circle,
                    _0RL_drawMeASheep_mgenerated_mentity_mCircle_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mCircle_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mCircle_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::Circle_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::Circle::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::Circle::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mEllipse_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mEllipse_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::Ellipse::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mEllipse_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Ellipse_ptr _o)
{
  drawMeASheep::generated::entity::Ellipse_ptr _no = drawMeASheep::generated::entity::Ellipse::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Ellipse,
               _0RL_drawMeASheep_mgenerated_mentity_mEllipse_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mEllipse_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::Ellipse_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_Ellipse,
               _0RL_drawMeASheep_mgenerated_mentity_mEllipse_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mEllipse_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::Ellipse::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::Ellipse_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_Ellipse,
                    _0RL_drawMeASheep_mgenerated_mentity_mEllipse_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mEllipse_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mEllipse_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::Ellipse_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::Ellipse::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::Ellipse::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::entity::DrawingSet* _p = (drawMeASheep::generated::entity::DrawingSet*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::entity::DrawingSet* _p = new drawMeASheep::generated::entity::DrawingSet;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_destructor_fn(void* _v)
{
  drawMeASheep::generated::entity::DrawingSet* _p = (drawMeASheep::generated::entity::DrawingSet*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::entity::DrawingSet& _s)
{
  drawMeASheep::generated::entity::DrawingSet* _p = new drawMeASheep::generated::entity::DrawingSet(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingSet* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingSet*& _sp)
{
  return _a >>= (const drawMeASheep::generated::entity::DrawingSet*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::entity::DrawingSet*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingSet,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingSet_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::entity::DrawingSet*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_marshal_fn(cdrStream& _s, void* _v)
{
  drawMeASheep::generated::entity::DrawingMap* _p = (drawMeASheep::generated::entity::DrawingMap*)_v;
  *_p >>= _s;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_unmarshal_fn(cdrStream& _s, void*& _v)
{
  drawMeASheep::generated::entity::DrawingMap* _p = new drawMeASheep::generated::entity::DrawingMap;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_destructor_fn(void* _v)
{
  drawMeASheep::generated::entity::DrawingMap* _p = (drawMeASheep::generated::entity::DrawingMap*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const drawMeASheep::generated::entity::DrawingMap& _s)
{
  drawMeASheep::generated::entity::DrawingMap* _p = new drawMeASheep::generated::entity::DrawingMap(_s);
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingMap* _sp)
{
  _a.PR_insert(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingMap*& _sp)
{
  return _a >>= (const drawMeASheep::generated::entity::DrawingMap*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const drawMeASheep::generated::entity::DrawingMap*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_drawMeASheep_mgenerated_mentity_mDrawingMap,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingMap_destructor_fn,
                    _v)) {
    _sp = (const drawMeASheep::generated::entity::DrawingMap*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::entity::DrawingGroup::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingGroup_ptr _o)
{
  drawMeASheep::generated::entity::DrawingGroup_ptr _no = drawMeASheep::generated::entity::DrawingGroup::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::entity::_tc_DrawingGroup,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingGroup_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::entity::_tc_DrawingGroup,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::entity::DrawingGroup::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::entity::DrawingGroup_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::entity::_tc_DrawingGroup,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mentity_mDrawingGroup_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::entity::DrawingGroup_ptr)_r->_ptrToObjRef(drawMeASheep::generated::entity::DrawingGroup::_PD_repoId);
    else
      _o = drawMeASheep::generated::entity::DrawingGroup::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(drawMeASheep::generated::manager::DrawingManager::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr _o)
{
  drawMeASheep::generated::manager::DrawingManager_ptr _no = drawMeASheep::generated::manager::DrawingManager::_duplicate(_o);
  _a.PR_insert(drawMeASheep::generated::manager::_tc_DrawingManager,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr* _op)
{
  _a.PR_insert(drawMeASheep::generated::manager::_tc_DrawingManager,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
               _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = drawMeASheep::generated::manager::DrawingManager::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, drawMeASheep::generated::manager::DrawingManager_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(drawMeASheep::generated::manager::_tc_DrawingManager,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_unmarshal_fn,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_marshal_fn,
                    _0RL_drawMeASheep_mgenerated_mmanager_mDrawingManager_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (drawMeASheep::generated::manager::DrawingManager_ptr)_r->_ptrToObjRef(drawMeASheep::generated::manager::DrawingManager::_PD_repoId);
    else
      _o = drawMeASheep::generated::manager::DrawingManager::_nil();
    return 1;
  }
  return 0;
}

